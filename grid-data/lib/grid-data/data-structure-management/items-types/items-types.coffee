PACK.items_types = {}

_.extend GridData.prototype,
  _initItemsTypes: ->
    @custom_items_types_metadata_generators = {}

    @registerMetadataGenerator (item, ext, index) =>
      type = @getItemType(index) or "default"

      if (typeMetadataGenerator = PACK.items_types[type]?.metadataGenerator)?
        metadata = typeMetadataGenerator(item, ext, index)
      else
        metadata = {}

      if (custom_item_type_metadata_generator = @custom_items_types_metadata_generators[type])?
        for generator in custom_item_type_metadata_generator
          generator(metadata, item, ext, index) # metadata is passed by refernce, no need to capture returned value.

      # Add a class with the item's type id
      type_class = "type-#{type}"
      if metadata.cssClasses?
        metadata.cssClasses.push type_class
      else
        metadata.cssClasses = [type_class]

      return metadata

    if @options.items_types_metadata_generators?
      for item_type, generator of @options.items_types_metadata_generators
        @registerItemTypeGenerator(item_type, generator)

  registerItemTypeGenerator: (item_type, metadata_generator) ->
    # registers a custom metadata generator for `item_type` 
    # Unlike regular metadata generators, the provided metadata_generator
    # will be called with the following arguments:
    #
    #   metadata_generator(metadata, item, ext, index)
    #
    # `metadata` arg is an object, passed by reference with the accumulated metadata
    # settings generated by the default metadata generator of this type (only) and
    # previously called custom metadata generators of this item_type.
    # You should edit this object with the changes (additions, changes removals of
    # properties) you want to apply.
    # Since the item is passed by reference, there's no need to return the
    # metadata object (will have no effect).
    if not @custom_items_types_metadata_generators[item_type]?
      @custom_items_types_metadata_generators[item_type] = []

    @custom_items_types_metadata_generators[item_type].push metadata_generator